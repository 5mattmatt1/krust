    @ cpsid if

    @ Check if HYP mode
    @ mrs r0, cpsr_all
    @ and r0, r0, #0x1F
    @ mov r8, #0x1A
    @ cmp r0, r8
    @ beq overHyped
    @ b continueBoot

    @ ldr r1, =continueBoot
    @ msr ELR_hyp, r1
    @ mrs r1, cpsr_all
    @ and r1, r1, #0x1f   @ CPSR_MODE_MASK
    @ orr r1, r1, #0x13   @ CPSR_MODE_SUPERVISOR
    @ msr SPSR_hyp, r1
    @ eret

    @ mrs r0,cpsr
    @ bic r0,r0,#0x1F
    @ orr r0,r0,#0x13
    @ msr spsr_cxsf,r0
    @ add r0,pc,#4
    @ msr ELR_hyp,r0
    @ eret

@     b continueBoot

@ continueBoot:

OBJCOPY=arm-none-eabi-objcopy
OBJDUMP=arm-none-eabi-objdump

TARGET=arm-unknown-linux-gnueabihf

SOURCES := $(shell find src -name '*.rs')
# Taken from https://github.com/osnr/rpi-kernel
# Files
NAME=kernel

.PHONY: build clean listing $(OUT_FILE)

all: clean krust.img krust.list

krust.img: krust.elf
	$(OBJCOPY) krust.elf -O binary krust.img

krust.list: krust.img
	$(OBJDUMP) -d krust.elf > krust.list

# src/interrupts_asm.s
# arm-none-eabi-gcc -T krust.ld -O0 -g -Wl,-gc-sections -mfpu=vfp -mfloat-abi=hard -march=armv6zk -mtune=arm1176jzf-s -nostdlib $^ -o $@

krust.elf: src/start.o src/main.o
	# Raspberry Pi 1
	# arm-none-eabi-gcc -T krust.ld -O0 -ffreestanding -g -Wl,-gc-sections -mfloat-abi=hard -mcpu=cortex-a7 -mtune=cortex-a7 -mfpu=neon-vfpv4 -nostdlib $^ -o $@
	arm-none-eabi-gcc -T krust.ld -O0 -g -Wl,-gc-sections -mfpu=vfp -mfloat-abi=hard -march=armv6zk -mtune=arm1176jzf-s -nostdlib $^ -o $@

# opt-level=s Makes some statuses fail...
%.o: %.rs $(SOURCES)
	rustc --target arm-unknown-linux-gnueabihf -g --crate-type="staticlib" -C lto=fat -C opt-level=0 $< -o $@

# 
%.o: %.s
	arm-none-eabi-as $< -o $@

# install: clean kernel.img
#	rpi-install.py kernel.img

# install-screen: install
#	sleep 5
#	screen /dev/tty.SLAB_USBtoUART 115200

clean:
	rm -f krust.img
	rm -f krust.elf
	rm -f src/*.o
